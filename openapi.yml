openapi: 3.0.0
info:
  title: Jobs API
  version: 1.0.0
  description: API for managing job listings
paths:
  /jobs:
    get:
      summary: Get all job listings
      responses:
        '200':
          description: A list of jobs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
    post:
      summary: Create a new job listing
      requestBody:
        description: Job object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        '201':
          description: Job created
  /jobs/{id}:
    get:
      summary: Get a job by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Job details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
    put:
      summary: Update a job by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Job object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        '200':
          description: Job updated
    delete:
      summary: Delete a job by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Job deleted
  /workspaces:
    get:
      summary: Get all workspaces
      responses:
        '200':
          description: A list of workspaces
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Workspace'
    post:
      summary: Create a new workspace
      requestBody:
        description: Workspace object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspace'
      responses:
        '201':
          description: Workspace created
  /workspaces/{id}:
    get:
      summary: Get a workspace by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Workspace details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
    put:
      summary: Update a workspace by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Workspace object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workspace'
      responses:
        '200':
          description: Workspace updated
    delete:
      summary: Delete a workspace by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Workspace deleted
components:
  schemas:
    Job:
      type: object
      required:
        - title
        - description
        - company
        - location
        - salary
      properties:
        title:
          type: string
        description:
          type: string
        company:
          type: string
        location:
          type: string
        salary:
          type: number
        datePosted:
          type: string
          format: date-time
    Workspace:
      type: object
      required:
        - name
        - address
        - details
        - cost
      properties:
        name:
          type: string
        address:
          type: object
          properties:
            firstLine:
              type: string
            secondLine:
              type: string
            postcode:
              type: string
            city:
              type: string
            country:
              type: string
            continent:
              type: string
        details:
          type: object
          properties:
            email:
              type: string
            number:
              type: string
        cost:
          type: number
        amenities:
          type: array
          items:
            type: string
        reviews:
          type: array
          items:
            type: object
            properties:
              user:
                type: string
              rating:
                type: number
              comment:
                type: string
                